name: cicd_sbb

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: sbb
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: ezen-github-actions-s3-bucket
  AWS_CODE_DEPLOY_APPLICATION: sbb-deploy
  AWS_CODE_DEPLOY_GROUP: sbb-deploy-group2

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
   
    - name: Build with Gradle
      # uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2  
      run: ./gradlew clean build --exclude-task test
      working-directory: ./${{ env.PROJECT_NAME }}
      
    - name: Make Directory for deliver
      run: mkdir deploy 
      
    - name: Copy Jar
      run: cp ./${{ env.PROJECT_NAME }}/build/libs/*.jar ./deploy/  
      
    - name: Copy appspec
      run: cp ./appspec.yml ./deploy/

    # (7) script files Copy
    - name: Copy shell
      run: cp ./scripts/* ./deploy/
      
    # (8) 압축파일 생성
    - name: Set NOW_DATETIME as env variable
      run: 
        echo "NOW_DATETIME=$(date "+%Y-%m-%d-%aT%H.%M.%S" -d 9hours)" >> $GITHUB_ENV
    - name: Set ZIP_FILE as env variable
      run:
        echo "ZIP_FILE=${PROJECT_NAME}_${NOW_DATETIME}" >> $GITHUB_ENV
    - name: Make zip file      
      run: zip -r -qq -j ./${{ env.ZIP_FILE }}.zip ./deploy/*  
        
    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
        
    - name: S3에 업로드
      run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
    
    - name: EC2에 배포
      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
